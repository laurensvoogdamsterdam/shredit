services:

  # web app (nextjs)
  web:
    build: ./web
    volumes:
      - ./web/src:/app/src
      - ./web/public:/app/public
    ports:
      - "3001:3000"
    env_file:
      - ./.env
    environment:
      - API_URL=http://api:8000      
    depends_on:
      - api

  # api service
  api:
    build: ./api
    volumes:
      - ./api/src/api:/app/api
      - ./.env:/app/.env
      # mount docker socket
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8000:8000"
    env_file:
      - ./.env    
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:password@db:5432/postgres
      - SERVICES=s3     # Specify which services to run (in this case, S3)
      - BUCKET_NAME=users
      - AWS_ACCESS_KEY_ID=test  # Dummy credentials for LocalStack
      - AWS_SECRET_ACCESS_KEY=test  # Dummy credentials for LocalStack
    depends_on:
      - db


  # external seervices 
  
  # localstack   
  localstack:
    image: localstack/localstack
    ports:
      - "4566:4566"    # Main LocalStack API
      - "4510-4559:4510-4559"  # Ports for additional services
    environment:
      - SERVICES=s3   
      - BUCKET_NAME=users
      - AWS_ACCESS_KEY_ID=test  # Dummy credentials for LocalStack
      - AWS_SECRET_ACCESS_KEY=test  # Dummy credentials for LocalStack
    


  db:
    build:
      context: ./vectordb
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - vectordb:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    
volumes:
  postgres_data:
  localstack_data:
  vectordb: